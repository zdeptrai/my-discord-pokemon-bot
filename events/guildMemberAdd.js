// events/guildMemberAdd.js
const { Events, EmbedBuilder } = require('discord.js');
const { logErrorToFile } = require('../utils/errors/errorReporter'); 

// CUSTOM_WELCOME_IMAGE_URL c·ªßa b·∫°n
const CUSTOM_WELCOME_IMAGE_URL = 'https://cdn3.emoji.gg/emojis/3167-march-thumbs-up.png'; 

// --- C·∫§U H√åNH C√ÅC K√äNH QUAN TR·ªåNG ƒê·ªÇ ƒêI·ªÄU H∆Ø·ªöNG ---
// Th√™m ID c·ªßa c√°c k√™nh quan tr·ªçng v√†o ƒë√¢y ƒë·ªÉ bot t·ª± ƒë·ªông hi·ªÉn th·ªã trong tin nh·∫Øn.
// B·∫°n c√≥ th·ªÉ l·∫•y ID k√™nh b·∫±ng c√°ch b·∫≠t Developer Mode trong Discord, chu·ªôt ph·∫£i v√†o k√™nh v√† "Sao ch√©p ID".
const importantChannelIds = {
    '‚ú® B·∫Øt ƒë·∫ßu t·∫°i ƒë√¢y:': [
        '1267119224782983239', // Rules Sever
        '1229092817197076641', // Events
    ],
    'üí¨ K√™nh tr√≤ chuy·ªán:': [
        '1394538921819508796', // EvilHunterTycoon
        '1270533057425969202', // HeartWoodOnline
        '1393240528929165505', // Pokemon
    ]
};

module.exports = {
    name: Events.GuildMemberAdd, 
    once: false, 

    async execute(member, client) {
        const guildId = member.guild.id;
        const userId = member.id; 
        const userDisplayName = member.displayName; 

        // Truy c·∫≠p ƒë·ªëi t∆∞·ª£ng Knex database t·ª´ client
        const db = client.db;

        try {
            const guildSettings = await db('guild_settings')
                .where('guild_id', guildId)
                .select('welcome_channel_id')
                .first();

            if (guildSettings && guildSettings.welcome_channel_id) {
                const welcomeChannel = member.guild.channels.cache.get(guildSettings.welcome_channel_id);

                if (welcomeChannel) {
                    // T·∫°o danh s√°ch c√°c k√™nh quan tr·ªçng t·ª´ c·∫•u h√¨nh
                    const fields = [];
                    for (const [title, channelIds] of Object.entries(importantChannelIds)) {
                        const channelList = channelIds.map(id => `‚Ä¢ <#${id}>`).join('\n');
                        fields.push({ 
                            name: title, 
                            value: channelList, 
                            inline: false 
                        });
                    }

                    const welcomeEmbed = new EmbedBuilder()
                        .setColor('#7289DA') 
                        .setTitle(`üëã Ch√†o M·ª´ng ${userDisplayName} ƒê·∫øn V·ªõi ${member.guild.name}! üëã`)
                        .setDescription(`Ch√†o m·ª´ng ${member.toString()}! Ch√∫ng t√¥i r·∫•t vui khi b·∫°n ƒë√£ tham gia server c·ªßa ch√∫ng t√¥i. H√£y c√πng kh√°m ph√° v√† k·∫øt n·ªëi v·ªõi m·ªçi ng∆∞·ªùi nh√©!`)
                        .setThumbnail(member.user.displayAvatarURL({ dynamic: true, size: 128 })) 
                        .setImage(CUSTOM_WELCOME_IMAGE_URL) 
                        .addFields(fields) // S·ª≠ d·ª•ng danh s√°ch fields ƒë∆∞·ª£c t·∫°o ƒë·ªông
                        .setFooter({ text: `Ch√∫c b·∫°n c√≥ nh·ªØng gi√¢y ph√∫t vui v·∫ª t·∫°i ƒë√¢y!` })
                        .setTimestamp();

                    // G·ª≠i tin nh·∫Øn v√† tag ng∆∞·ªùi d√πng m·ªõi
                    await welcomeChannel.send({ content: `${member.toString()}`, embeds: [welcomeEmbed] });

                } else {
                    console.warn(`[WELCOME_EVENT_WARN] K√™nh ch√†o m·ª´ng (ID: ${guildSettings.welcome_channel_id}) kh√¥ng t√¨m th·∫•y trong guild (ID: ${guildId}).`);
                }
            } else {
                console.warn(`[WELCOME_EVENT_WARN] Kh√¥ng c√≥ k√™nh ch√†o m·ª´ng n√†o ƒë∆∞·ª£c thi·∫øt l·∫≠p cho guild (ID: ${guildId}).`);
            }

        } catch (error) {
            console.error(`[WELCOME_EVENT_ERROR] L·ªói khi x·ª≠ l√Ω s·ª± ki·ªán guildMemberAdd cho ng∆∞·ªùi d√πng ${userId} trong guild ${guildId}:`, error);
            logErrorToFile('WELCOME_EVENT_ERROR', member.user.tag, `L·ªói khi x·ª≠ l√Ω guildMemberAdd`, error);
        }
    },
};
