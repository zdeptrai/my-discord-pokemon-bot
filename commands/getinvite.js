// commands/getinvite.js
const { EmbedBuilder, MessageFlags, PermissionsBitField, ChannelType } = require('discord.js');
const { isBotOwner } = require('../utils/core/permissionUtils'); // Import h√†m isBotOwner

module.exports = {
    name: 'getinvite',
    description: 'T·∫°o v√† g·ª≠i l·ªùi m·ªùi ƒë·∫øn m·ªôt server m√† bot ƒëang tham gia (ch·ªâ d√†nh cho ch·ªß bot).',
    aliases: ['invite', 'serverinvite'],
    usage: '<server_id>',
    cooldown: 5, // Cooldown ƒë·ªÉ tr√°nh spam

    async execute(message, args, client, db) { // db kh√¥ng c·∫ßn thi·∫øt ·ªü ƒë√¢y nh∆∞ng gi·ªØ l·∫°i cho ƒë·ªìng b·ªô
        const userId = message.author.id;

        // 1. Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ ph·∫£i l√† ch·ªß bot hay kh√¥ng
        if (!isBotOwner(userId, client)) {
            return message.channel.send({
                content: `<@${userId}> L·ªánh n√†y ch·ªâ d√†nh cho ch·ªß bot.`,
                flags: MessageFlags.Ephemeral
            });
        }

        // 2. Ki·ªÉm tra c√∫ ph√°p l·ªánh
        if (args.length !== 1) {
            return message.channel.send({
                content: `<@${userId}> Vui l√≤ng cung c·∫•p ID c·ªßa server m√† b·∫°n mu·ªën l·ªùi m·ªùi. V√≠ d·ª•: \`${client.config.PREFIX}getinvite <server_id>\``,
                flags: MessageFlags.Ephemeral
            });
        }

        const targetGuildId = args[0];
        const guild = client.guilds.cache.get(targetGuildId); // L·∫•y guild t·ª´ cache

        // 3. Ki·ªÉm tra xem bot c√≥ ·ªü trong server ƒë√≥ kh√¥ng
        if (!guild) {
            return message.channel.send({
                content: `<@${userId}> Bot kh√¥ng t√¨m th·∫•y server v·ªõi ID \`${targetGuildId}\`.`,
                flags: MessageFlags.Ephemeral
            });
        }

        let invite = null;
        let foundChannel = null;

        // 4. T√¨m k√™nh c√≥ th·ªÉ t·∫°o l·ªùi m·ªùi
        // ∆Øu ti√™n c√°c k√™nh vƒÉn b·∫£n m·∫∑c ƒë·ªãnh ho·∫∑c k√™nh chung
        const channels = guild.channels.cache.filter(c => 
            c.type === ChannelType.GuildText && 
            c.permissionsFor(client.user).has(PermissionsBitField.Flags.CreateInstantInvite)
        ).sort((a, b) => {
            // S·∫Øp x·∫øp ƒë·ªÉ ∆∞u ti√™n c√°c k√™nh ph·ªï bi·∫øn h∆°n (v√≠ d·ª•: #general)
            if (a.name === 'general') return -1;
            if (b.name === 'general') return 1;
            return a.position - b.position;
        });

        for (const [channelId, channel] of channels) {
            try {
                // T·∫°o l·ªùi m·ªùi c√≥ th·ªùi h·∫°n 1 gi·ªù (3600 gi√¢y) v√† gi·ªõi h·∫°n 1 l·∫ßn s·ª≠ d·ª•ng
                invite = await channel.createInvite({
                    maxAge: 3600, // 1 gi·ªù
                    maxUses: 1,   // 1 l·∫ßn s·ª≠ d·ª•ng
                    unique: true, // ƒê·∫£m b·∫£o l·ªùi m·ªùi l√† duy nh·∫•t
                    reason: `Y√™u c·∫ßu l·ªùi m·ªùi b·ªüi ch·ªß bot (${message.author.tag}) cho server ID ${guild.id}.`
                });
                foundChannel = channel;
                break; // ƒê√£ t·∫°o ƒë∆∞·ª£c l·ªùi m·ªùi, tho√°t v√≤ng l·∫∑p
            } catch (error) {
                console.warn(`[GETINVITE_ERROR] Kh√¥ng th·ªÉ t·∫°o l·ªùi m·ªùi trong k√™nh ${channel.name} (ID: ${channel.id}) c·ªßa guild ${guild.name} (ID: ${guild.id}):`, error.message);
                // Ti·∫øp t·ª•c th·ª≠ k√™nh kh√°c
            }
        }

        // 5. G·ª≠i l·ªùi m·ªùi qua DM cho ch·ªß bot
        if (invite && foundChannel) {
            try {
                const ownerDMChannel = await client.users.fetch(userId);
                const embed = new EmbedBuilder()
                    .setColor('#00FF00') // M√†u xanh l√° c√¢y
                    .setTitle(`üîó L·ªùi M·ªùi ƒê·∫øn Server: ${guild.name}`)
                    .setDescription(`ƒê√¢y l√† l·ªùi m·ªùi c·ªßa b·∫°n ƒë·∫øn server **${guild.name}**:\n\n**${invite.url}**`)
                    .addFields(
                        { name: 'ID Server', value: `\`${guild.id}\``, inline: true },
                        { name: 'K√™nh t·∫°o l·ªùi m·ªùi', value: `<#${foundChannel.id}> (\`${foundChannel.name}\`)`, inline: true },
                        { name: 'Th·ªùi h·∫°n', value: `1 gi·ªù`, inline: true },
                        { name: 'S·ªë l·∫ßn s·ª≠ d·ª•ng t·ªëi ƒëa', value: `1 l·∫ßn`, inline: true }
                    )
                    .setFooter({ text: 'L·ªùi m·ªùi n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong th·ªùi gian ng·∫Øn.' })
                    .setTimestamp();
                
                await ownerDMChannel.send({ embeds: [embed] });
                await message.channel.send({
                    content: `<@${userId}> L·ªùi m·ªùi ƒë·∫øn server \`${guild.name}\` ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn DM c·ªßa b·∫°n.`,
                    flags: MessageFlags.Ephemeral
                });
            } catch (dmError) {
                console.error(`[GETINVITE_ERROR] Kh√¥ng th·ªÉ g·ª≠i DM l·ªùi m·ªùi cho ch·ªß bot (${userId}):`, dmError);
                await message.channel.send({
                    content: `<@${userId}> Kh√¥ng th·ªÉ g·ª≠i l·ªùi m·ªùi ƒë·∫øn DM c·ªßa b·∫°n. Vui l√≤ng ki·ªÉm tra c√†i ƒë·∫∑t DM c·ªßa b·∫°n.`,
                    flags: MessageFlags.Ephemeral
                });
            }
        } else {
            await message.channel.send({
                content: `<@${userId}> Bot kh√¥ng c√≥ quy·ªÅn t·∫°o l·ªùi m·ªùi trong b·∫•t k·ª≥ k√™nh n√†o c·ªßa server \`${guild.name}\` (ID: \`${guild.id}\`). Vui l√≤ng c·∫•p quy·ªÅn "T·∫°o l·ªùi m·ªùi t·ª©c th√¨" cho bot trong m·ªôt k√™nh.`,
                flags: MessageFlags.Ephemeral
            });
        }
    },
};
